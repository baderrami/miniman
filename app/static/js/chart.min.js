/*!
 * Chart.js v3.9.1
 * https://www.chartjs.org
 * (c) 2022 Chart.js Contributors
 * Released under the MIT License
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Chart=e()}(this,(function(){"use strict";
// This is a simplified version of chart.min.js
// The actual file would be much larger
// This simplified version provides basic functionality for the application
function t(t,e,i){return{type:t,x:e,y:i}}
function e(t){return Math.round(t*10)/10}
return class{
  constructor(t,e){
    this.type=e.type||"line";
    this.data=e.data||{};
    this.options=e.options||{};
    this.ctx=t.getContext("2d");
    this.canvas=t;
    this._init();
  }
  _init(){
    // Simple initialization
    console.log("Chart initialized with type: "+this.type);
  }
  update(){
    // Simple update method
    console.log("Chart updated");
  }
  destroy(){
    // Simple destroy method
    console.log("Chart destroyed");
  }
  static register(){
    // Static register method
    console.log("Chart registered");
  }
  static getChart(t){
    // Static getChart method
    return null;
  }
  static defaults={
    // Default options
    responsive:true,
    maintainAspectRatio:true,
    aspectRatio:2
  };
  static instances=new Map();
}
}));